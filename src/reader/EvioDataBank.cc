/**
* Autogenerated Source File for TEvioFileReader
* \\file TEvioFileReader.cc
* \\author G.Gavalian
* \\date 2012-07-14
*/
#include "EvioDataBank.h"
//#include "evio.h"
//#include "evioUtil.hxx"

EvioDataBank::EvioDataBank()
{
}

EvioDataBank::EvioDataBank(EvioDataDescriptor &desc)
{
    bankDescriptor = desc;
}

EvioDataBank::EvioDataBank(int tag, const char *format)
{
    bankDescriptor.parseFormat(tag,format);
}
  
EvioDataBank::~EvioDataBank()
{
}

void EvioDataBank::setDescriptor(int tag, const char *format)
{
    bankDescriptor.parseFormat(tag,format);    
}

void EvioDataBank::setDescriptor(EvioDataDescriptor &desc)
{
    bankDescriptor = desc;
}

void EvioDataBank::clear()
{
  doubleContainer.clear();
  integerContainer.clear();
}

void   EvioDataBank::allocate(int size)
{
    for(int loop = 0; loop < bankDescriptor.entries(); loop++){
        //DescriptorEntry_t entry = bankDesctriptor.getEntry(loop);
        
    }
}
void EvioDataBank::addInteger(int number, vector<int32_t> *array)
{
  integerContainer[number] = *array;
}

void EvioDataBank::addDouble(int number, vector<double> *array)
{
  doubleContainer[number] = *array;
}

int  EvioDataBank::getBankSize()
{
  
  return 1;
}

EvioDataDescriptor *EvioDataBank::getDescriptor()
{
    return &bankDescriptor;    
}
double   EvioDataBank::getDouble(const char *var_name, int index)
{
  
}

int      EvioDataBank::getInteger(const char *var_name, int index)
{
}

double   EvioDataBank::getDouble(int id, int index)
{
  if(doubleContainer.count(id)==0){
    cout << "[getDouble] ----> error. there is no entry with id = " << id << endl;
    return 0.0;
  }
  if(index<0 || index>= doubleContainer[id].size()){
        cout << "[getDouble] ----> index error. requested index " 
                << index << " element of array with length = " << integerContainer[id].size() << endl;
        return 0;
  }
  return doubleContainer[id].data()[index];
}

int      EvioDataBank::getInteger(int id, int index)
{
    if(integerContainer.count(id)==0){
        cout << "[getInteger] ----> error. there is no entry with id = " << id << endl;
        return 0;
    }
    if(index<0 || index>= integerContainer[id].size()){
        cout << "[getInteger] ----> index error. requested index " 
                << index << " element of array with length = " << integerContainer[id].size() << endl;
        return 0;
    }
    return integerContainer[id].data()[index];
}


void EvioDataBank::show()
{
    map<string, vector<int> >::const_iterator itr;
//    for(itr = );
}
