/**
* Autogenerated Source File for TADCClass
* \\file TADCClass.cc
* \\author G.Gavalian
* \\date 2013-11-13
*/
#include "TADCClassPulse.h"


ClassImp(TADCClassPulse)

TADCClassPulse::TADCClassPulse()
{
}

TADCClassPulse::TADCClassPulse(int nrows){
  Init(nrows);
}

TADCClassPulse::TADCClassPulse(int slot, int channel,int nrows)
{
  Init(slot,channel,nrows);
}

TADCClassPulse::TADCClassPulse(const TADCClassPulse &obj)
{
  slot_number    = obj.slot_number;
  channel_number = obj.channel_number;
  adcValue.Set(obj.adcValue.GetSize());
  //printf("[copy constructor] ----> %d %d %d\n",slot_number,channel_number,obj.channel_number);
  for(int loop = 0; loop < adcValue.GetSize();loop++)
    {
      adcValue.AddAt(obj.adcValue.At(loop),loop);
    }
}

TADCClassPulse::~TADCClassPulse()
{
  
}

void TADCClassPulse::Init(int nrows)
{
  adcValue.Set(nrows);
}

void TADCClassPulse::SetSlotChannel(int slot, int channel)
{
  slot_number    = slot;
  channel_number = channel; 
}

Short_t TADCClassPulse::GetValue(int row)
{
  return adcValue.At(row);
}

void TADCClassPulse::SetValue(int row, int value)
{
  adcValue.AddAt((Int_t) value,row);
}

void TADCClassPulse::Print()
{
  cout << " ADC Pulse Mode : SLOT " <<  slot_number << "  CHANNEL " << channel_number;
  for(int loop = 0; loop < adcValue.GetSize(); loop ++){
    cout << "  " << adcValue.At(loop);
  } 
  cout << endl;
}

void TADCClassPulse::Init(int slot, int channel, int nrows)
{
  SetSlotChannel(slot,channel);
  Init(nrows);
}

/* const TADCClass &TADCClass::operator=(const TADCClass &obj){} */
