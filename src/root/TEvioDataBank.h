/**
* Autogenerated Header File for TEvioFileReader
* \\file TEvioFileReader.h
* \\author G.Gavalian
* \\date 2012-07-14
*/

#ifndef __TEVIODATABANK__
#define __TEVIODATABANK__

#include <iostream>
#include <string>
#include <cmath>
#include <vector>
#include <map>

#include "TROOT.h"
#include "TSystem.h"
#include "TObject.h"
#include "TArrayD.h"
#include "TArrayI.h"

#include "EvioDataBank.h"

//#define MAXEVIOBUF   1000000

using namespace std;

//using namespace evio;
//! A Brief Description
/*
 * A detailed description
 */

class TEvioDataBank : public TObject {

private:

  map< int , vector<double>  >   doubleContainer;
  map< int , vector<int32_t> >   integerContainer;
  EvioDataBank  dataBank;  
  //void *evioChan;
  //evioFileChannel *evioChan;

public:

//uint32_t  buffer[2];
/** Default Constructor */
TEvioDataBank();
TEvioDataBank(int tag, const char *format);
/** Default Destructor */
~TEvioDataBank();
/** Copy Constructor if one is needed */
/*TEvioFileReader( const TEvioFileReader &obj); */ 

 void   clear();
 void   addInteger(int number, vector<int32_t> *array);
 void   addDouble(int number, vector<double> *array);

 Int_t  getBankSize();

 Double_t   getDouble(const char *var_name, int index);
 Int_t      getInteger(const char *var_name, int index);
 Double_t   getDouble(int id, int index);
 Int_t      getInteger(int id, int index);
 void       show();
 
/** An operator = if one is needed */
/* const TEvioFileReader &operator=(const TEvioFileReader &obj); */

 ClassDef(TEvioDataBank,1)
};

#endif
