/**
* Autogenerated Header File for TEvioFileReader
* \\file TEvioFileReader.h
* \\author G.Gavalian
* \\date 2012-07-14
*/

#ifndef __TEVIOFILEREADER__
#define __TEVIOFILEREADER__

#include <iostream>
#include <string>
#include <cmath>
#include <vector>
#include "EvioFileReader.h"

//#include "stdint.h"
//#include "cstdint"
//#include "evio.h"
//#include "TFileStream.h"
//#include "evioUtil.hxx"
//#include "evioUtilTemplates.hxx"
//#include "evioFileChannel.hxx"
#include "TROOT.h"
#include "TSystem.h"
#include "TObject.h"
#include "TArrayD.h"
#include "TArrayI.h"
#include "TClonesArray.h"
#include "TEvioDataBank.h"
#include "TEvioDataEvent.h"

#ifndef MAXEVIOBUF
#define MAXEVIOBUF   4000000
#endif


//#unsigned __INT32_TYPE__

using namespace std;
//using namespace evio;

//! A Brief Description
/*
 * A detailed description
 */

class TEvioFileReader : public TObject {

private:

  EvioFileReader  reader;
  int currentEventInFile;
  int numberOfEvents;
  int evioFileHandle;
  uint32_t  buffer[MAXEVIOBUF];

  //void *evioChan;
  //evioFileChannel *evioChan;

public:


//uint32_t  buffer[2];


/** Default Constructor */
TEvioFileReader();
/** Default Destructor */
~TEvioFileReader();
/** Copy Constructor if one is needed */
/*TEvioFileReader( const TEvioFileReader &obj); */ 

 void open(const char *filename);
 void close();

 bool next();

 vector<double>  *getDoubleVector(int tag, int num);
 TArrayD         *getArrayDouble(int tag, int num);
 TArrayI         *getArrayInt(int tag, int num);

 TEvioDataBank   *getBank(int tag, int num = 0);
 void             getBank(TEvioDataBank& bank,int tag, int num = 0);

 void getEvent(TEvioDataEvent &event);

 TClonesArray  *getFlashADC(int tag, int num);
/** An operator = if one is needed */
/* const TEvioFileReader &operator=(const TEvioFileReader &obj); */

 ClassDef(TEvioFileReader,1)

};
#endif
