/**
* Autogenerated Header File for TPhysicsEvent
* \\file TPhysicsEvent.h
* \\author G.Gavalian
* \\date 2013-10-28
*/
#ifndef __TPHYSICSEVENT__
#define __TPHYSICSEVENT__
#include <iostream>
#include <string>
#include <cmath>
#include <vector>
#include "TROOT.h"
#include "TObject.h"
#include "TParticle.h"
#include "TDatabasePDG.h"
#include "TParticlePDG.h"
#include "TObjArray.h"
#include "TEventOperation.h"

using namespace std;
//! A Brief Description
/*
 * A detailed description
 */

class TPhysicsEvent : public TObject {

private:

  //TDatabasePDG  *gPDGDatabase;
  TObjArray     *particleBuffer;
  TParticle     beamParticle;
  TParticle     targetParticle;

  void    add_particle(TParticle *pp, TParticle *pc);
  void    sub_particle(TParticle *pp, TParticle *pc);
  void    create_particle(TParticle *pp, vector<int> signs, vector<int> pids,vector<int> order);

public:

/** Default Constructor */
TPhysicsEvent();
/** Default Destructor */
~TPhysicsEvent();
/** Copy Constructor if one is needed */
/*TPhysicsEvent( const TPhysicsEvent &obj); */ 
 
 TParticle &Beam(){ return beamParticle;};
 TParticle &Target(){ return targetParticle;};

 void Print();
 void Clear();
 void AddParticle(int pid, double px, double py, double pz, double vx, double vy, double vz, double time);
 TString ParticleToString(TParticle *pref);
 
 TParticle *FindParticle(int pid, int order);
 TParticle *GetParticle(int order);
 int        GetCount();
 double     Match(TParticle *part, int index);
 int        BestMatch(TParticle *part);
 
 void       SetTarget(int pid, double px, double py,double pz);
 void       SetPhotonBeam(double px, double py, double pz);
 void       SetElectronBeam(double px, double py, double pz);
 void       SetPhotonBeam(double energy);
 void       ApplyOperation(TEventOperation &oper);

 TLorentzVector getParticle(const char *formula);
 TLorentzVector getParticle(const char *parent, const char *formula);

 int        GetCountByPid(int pid);
/** An operator = if one is needed */
/* const TPhysicsEvent &operator=(const TPhysicsEvent &obj); */

 ClassDef(TPhysicsEvent,1)
};

extern TDatabasePDG *gPDGDatabase;
 
#endif
