//
// File generated by /opt/local/libexec/root5/bin/rootcint at Fri Sep 26 16:18:17 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME srcdItoolsdITEventOperationDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TEventOperationDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TEventOperation_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TEventOperation(void *p = 0);
   static void *newArray_TEventOperation(Long_t size, void *p);
   static void delete_TEventOperation(void *p);
   static void deleteArray_TEventOperation(void *p);
   static void destruct_TEventOperation(void *p);
   static void streamer_TEventOperation(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TEventOperation*)
   {
      ::TEventOperation *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TEventOperation >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TEventOperation", ::TEventOperation::Class_Version(), "./src/tools/TEventOperation.h", 24,
                  typeid(::TEventOperation), DefineBehavior(ptr, ptr),
                  &::TEventOperation::Dictionary, isa_proxy, 0,
                  sizeof(::TEventOperation) );
      instance.SetNew(&new_TEventOperation);
      instance.SetNewArray(&newArray_TEventOperation);
      instance.SetDelete(&delete_TEventOperation);
      instance.SetDeleteArray(&deleteArray_TEventOperation);
      instance.SetDestructor(&destruct_TEventOperation);
      instance.SetStreamerFunc(&streamer_TEventOperation);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TEventOperation*)
   {
      return GenerateInitInstanceLocal((::TEventOperation*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TEventOperation*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
atomic_TClass_ptr TEventOperation::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TEventOperation::Class_Name()
{
   return "TEventOperation";
}

//______________________________________________________________________________
const char *TEventOperation::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEventOperation*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TEventOperation::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEventOperation*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TEventOperation::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEventOperation*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TEventOperation::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEventOperation*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void TEventOperation::Streamer(TBuffer &R__b)
{
   // Stream an object of class TEventOperation.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      {
         vector<int> &R__stl =  operSigns;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int> &R__stl =  operPids;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int> &R__stl =  operOrders;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      operParticle.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TEventOperation::IsA());
   } else {
      R__c = R__b.WriteVersion(TEventOperation::IsA(), kTRUE);
      {
         vector<int> &R__stl =  operSigns;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<int> &R__stl =  operPids;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<int> &R__stl =  operOrders;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      operParticle.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TEventOperation::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TEventOperation.
      TClass *R__cl = ::TEventOperation::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "operSigns", (void*)&operSigns);
      R__insp.InspectMember("vector<int>", (void*)&operSigns, "operSigns.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "operPids", (void*)&operPids);
      R__insp.InspectMember("vector<int>", (void*)&operPids, "operPids.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "operOrders", (void*)&operOrders);
      R__insp.InspectMember("vector<int>", (void*)&operOrders, "operOrders.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "operParticle", &operParticle);
      R__insp.InspectMember(operParticle, "operParticle.");
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TEventOperation(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TEventOperation : new ::TEventOperation;
   }
   static void *newArray_TEventOperation(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TEventOperation[nElements] : new ::TEventOperation[nElements];
   }
   // Wrapper around operator delete
   static void delete_TEventOperation(void *p) {
      delete ((::TEventOperation*)p);
   }
   static void deleteArray_TEventOperation(void *p) {
      delete [] ((::TEventOperation*)p);
   }
   static void destruct_TEventOperation(void *p) {
      typedef ::TEventOperation current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TEventOperation(TBuffer &buf, void *obj) {
      ((::TEventOperation*)obj)->::TEventOperation::Streamer(buf);
   }
} // end of namespace ROOT for class ::TEventOperation

namespace ROOT {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "/opt/local/libexec/root5/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<int>

/********************************************************
* src/tools/TEventOperationDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTEventOperationDict();

extern "C" void G__set_cpp_environmentTEventOperationDict() {
  G__cpp_reset_tagtableTEventOperationDict();
}
#include <new>
extern "C" int G__cpp_dllrevTEventOperationDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TEventOperation */
static int G__TEventOperationDict_262_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEventOperation* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEventOperation[n];
     } else {
       p = new((void*) gvp) TEventOperation[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEventOperation;
     } else {
       p = new((void*) gvp) TEventOperation;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventOperationDictLN_TEventOperation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventOperationDict_262_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEventOperation*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventOperationDict_262_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEventOperation*) G__getstructoffset())->AddOperand((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventOperationDict_262_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int>& obj = ((TEventOperation*) G__getstructoffset())->GetSigns();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventOperationDict_262_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int>& obj = ((TEventOperation*) G__getstructoffset())->GetPids();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventOperationDict_262_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int>& obj = ((TEventOperation*) G__getstructoffset())->GetOrders();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventOperationDict_262_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((TEventOperation*) G__getstructoffset())->getVector();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventOperationDict_262_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEventOperation*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventOperationDict_262_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEventOperation*) G__getstructoffset())->PrintParticle();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventOperationDict_262_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEventOperation*) G__getstructoffset())->Parse((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventOperationDict_262_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEventOperation*) G__getstructoffset())->GetParticle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventOperationDict_262_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TEventOperation*) G__getstructoffset())->Mass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventOperationDict_262_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TEventOperation*) G__getstructoffset())->Mass2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventOperationDict_262_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TEventOperation*) G__getstructoffset())->Theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventOperationDict_262_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TEventOperation*) G__getstructoffset())->Phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventOperationDict_262_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TEventOperation*) G__getstructoffset())->P());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventOperationDict_262_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TEventOperation::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventOperationDict_262_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEventOperation::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventOperationDict_262_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TEventOperation::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventOperationDict_262_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TEventOperation::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventOperationDict_262_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TEventOperation*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventOperationDict_262_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEventOperation*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventOperationDict_262_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEventOperation*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventOperationDict_262_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEventOperation*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventOperationDict_262_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEventOperation::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventOperationDict_262_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEventOperation::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventOperationDict_262_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEventOperation::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventOperationDict_262_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEventOperation::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TEventOperationDict_262_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TEventOperation* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TEventOperation(*(TEventOperation*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventOperationDictLN_TEventOperation));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TEventOperation G__TTEventOperation;
static int G__TEventOperationDict_262_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TEventOperation*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TEventOperation*) (soff+(sizeof(TEventOperation)*i)))->~G__TTEventOperation();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TEventOperation*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TEventOperation*) (soff))->~G__TTEventOperation();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TEventOperationDict_262_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEventOperation* dest = (TEventOperation*) G__getstructoffset();
   *dest = *(TEventOperation*) libp->para[0].ref;
   const TEventOperation& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TEventOperation */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTEventOperationDict {
 public:
  G__Sizep2memfuncTEventOperationDict(): p(&G__Sizep2memfuncTEventOperationDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTEventOperationDict::*p)();
};

size_t G__get_sizep2memfuncTEventOperationDict()
{
  G__Sizep2memfuncTEventOperationDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTEventOperationDict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTEventOperationDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventOperationDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventOperationDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventOperationDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventOperationDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventOperationDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventOperationDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventOperationDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TEventOperationDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventOperationDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TEventOperation */
static void G__setup_memvarTEventOperation(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventOperationDictLN_TEventOperation));
   { TEventOperation *p; p=(TEventOperation*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventOperationDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"operSigns=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventOperationDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"operPids=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventOperationDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"operOrders=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventOperationDictLN_TParticle),-1,-1,4,"operParticle=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEventOperationDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTEventOperationDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTEventOperation(void) {
   /* TEventOperation */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventOperationDictLN_TEventOperation));
   G__memfunc_setup("stringTokenize",1504,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__TEventOperationDictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<string>"), 0, 2, 1, 4, 0, 
"u 'string' - 11 - _str u 'string' - 11 - _delim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("expressionTokenize",1945,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__TEventOperationDictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<string>"), 0, 1, 1, 4, 0, "u 'string' - 11 - _str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TEventOperation",1543,G__TEventOperationDict_262_0_3, 105, G__get_linked_tagnum(&G__TEventOperationDictLN_TEventOperation), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__TEventOperationDict_262_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddOperand",978,G__TEventOperationDict_262_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - sign i - - 0 - pid "
"i - - 0 - order", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigns",804,G__TEventOperationDict_262_0_6, 117, G__get_linked_tagnum(&G__TEventOperationDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPids",688,G__TEventOperationDict_262_0_7, 117, G__get_linked_tagnum(&G__TEventOperationDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOrders",911,G__TEventOperationDict_262_0_8, 117, G__get_linked_tagnum(&G__TEventOperationDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVector",947,G__TEventOperationDict_262_0_9, 117, G__get_linked_tagnum(&G__TEventOperationDictLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__TEventOperationDict_262_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintParticle",1345,G__TEventOperationDict_262_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Parse",507,G__TEventOperationDict_262_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - operation", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticle",1108,G__TEventOperationDict_262_0_13, 85, G__get_linked_tagnum(&G__TEventOperationDictLN_TParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mass",404,G__TEventOperationDict_262_0_14, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mass2",454,G__TEventOperationDict_262_0_15, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Theta",502,G__TEventOperationDict_262_0_16, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Phi",289,G__TEventOperationDict_262_0_17, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("P",80,G__TEventOperationDict_262_0_18, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TEventOperationDict_262_0_19, 85, G__get_linked_tagnum(&G__TEventOperationDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TEventOperation::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TEventOperationDict_262_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEventOperation::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TEventOperationDict_262_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TEventOperation::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TEventOperationDict_262_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TEventOperation::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__TEventOperationDict_262_0_23, 85, G__get_linked_tagnum(&G__TEventOperationDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__TEventOperationDict_262_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__TEventOperationDict_262_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TEventOperationDict_262_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TEventOperationDict_262_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEventOperation::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TEventOperationDict_262_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEventOperation::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TEventOperationDict_262_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEventOperation::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TEventOperationDict_262_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEventOperation::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TEventOperation", 1543, G__TEventOperationDict_262_0_31, (int) ('i'), G__get_linked_tagnum(&G__TEventOperationDictLN_TEventOperation), -1, 0, 1, 1, 1, 0, "u 'TEventOperation' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TEventOperation", 1669, G__TEventOperationDict_262_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TEventOperationDict_262_0_33, (int) ('u'), G__get_linked_tagnum(&G__TEventOperationDictLN_TEventOperation), -1, 1, 1, 1, 1, 0, "u 'TEventOperation' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTEventOperationDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTEventOperationDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTEventOperationDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TEventOperationDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__TEventOperationDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_TParticle = { "TParticle" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_TEventOperation = { "TEventOperation" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__TEventOperationDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTEventOperationDict() {
  G__TEventOperationDictLN_TClass.tagnum = -1 ;
  G__TEventOperationDictLN_TBuffer.tagnum = -1 ;
  G__TEventOperationDictLN_TMemberInspector.tagnum = -1 ;
  G__TEventOperationDictLN_string.tagnum = -1 ;
  G__TEventOperationDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TEventOperationDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TEventOperationDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__TEventOperationDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TEventOperationDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__TEventOperationDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__TEventOperationDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__TEventOperationDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__TEventOperationDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__TEventOperationDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__TEventOperationDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__TEventOperationDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__TEventOperationDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__TEventOperationDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__TEventOperationDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__TEventOperationDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__TEventOperationDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__TEventOperationDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__TEventOperationDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__TEventOperationDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__TEventOperationDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__TEventOperationDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__TEventOperationDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__TEventOperationDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__TEventOperationDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__TEventOperationDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__TEventOperationDictLN_TLorentzVector.tagnum = -1 ;
  G__TEventOperationDictLN_TParticle.tagnum = -1 ;
  G__TEventOperationDictLN_TEventOperation.tagnum = -1 ;
  G__TEventOperationDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__TEventOperationDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TEventOperationDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__TEventOperationDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTEventOperationDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_string);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_TLorentzVector);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_TParticle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_TEventOperation),sizeof(TEventOperation),-1,1280,(char*)NULL,G__setup_memvarTEventOperation,G__setup_memfuncTEventOperation);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventOperationDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupTEventOperationDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTEventOperationDict()");
  G__set_cpp_environmentTEventOperationDict();
  G__cpp_setup_tagtableTEventOperationDict();

  G__cpp_setup_inheritanceTEventOperationDict();

  G__cpp_setup_typetableTEventOperationDict();

  G__cpp_setup_memvarTEventOperationDict();

  G__cpp_setup_memfuncTEventOperationDict();
  G__cpp_setup_globalTEventOperationDict();
  G__cpp_setup_funcTEventOperationDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTEventOperationDict();
  return;
}
class G__cpp_setup_initTEventOperationDict {
  public:
    G__cpp_setup_initTEventOperationDict() { G__add_setup_func("TEventOperationDict",(G__incsetup)(&G__cpp_setupTEventOperationDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTEventOperationDict() { G__remove_setup_func("TEventOperationDict"); }
};
G__cpp_setup_initTEventOperationDict G__cpp_setup_initializerTEventOperationDict;

